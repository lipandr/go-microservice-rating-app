<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="67d6f17e-55a1-4eaa-b3d2-a076102c0fa0" name="Changes" comment="discovery service">
      <change afterPath="$PROJECT_DIR$/.idea/go-microservice-rating-app.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gen/movie_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/grpcutil/grpcutil.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/metadata/internal/handler/grpc/grpc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/metadata/pkg/model/mapper.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/movie/internal/gateway/metadata/grpc/metadata.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/movie/internal/gateway/rating/grpc/grpc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/movie/internal/handler/grpc/grpc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rating/internal/handler/grpc/grpc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/movie.proto" beforeDir="false" afterPath="$PROJECT_DIR$/api/movie.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/movie.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/gen/movie.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/metadata/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/metadata/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/movie/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/movie/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/movie/internal/controller/movie/controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/movie/internal/controller/movie/controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rating/cmd/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/rating/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.17.13" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2KxWahJawyblwSPSVaM8zns09a6" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File"
  }
}]]></component>
  <component name="RunManager" selected="Go Build.go build github.com/lipandr/go-microservice-rating-app/movie/cmd">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/sizecompare/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/lipandr/go-microservice-rating-app/metadata/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app/metadata/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/metadata/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/lipandr/go-microservice-rating-app/movie/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app/movie/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/movie/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/lipandr/go-microservice-rating-app/rating/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app/rating/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/rating/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/lipandr/go-microservice-rating-app" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="gobench github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-microservice-rating-app" />
      <working_directory value="$PROJECT_DIR$/cmd/sizecompare" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/lipandr/go-microservice-rating-app/movie/cmd" />
        <item itemvalue="Go Build.go build github.com/lipandr/go-microservice-rating-app/rating/cmd" />
        <item itemvalue="Go Build.go build github.com/lipandr/go-microservice-rating-app/metadata/cmd" />
        <item itemvalue="Go Test.gobench github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" />
        <item itemvalue="Go Build.go build github.com/lipandr/go-microservice-rating-app/cmd/sizecompare" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="memory repo" />
    <MESSAGE value="discovery service" />
    <option name="LAST_COMMIT_MESSAGE" value="discovery service" />
  </component>
</project>